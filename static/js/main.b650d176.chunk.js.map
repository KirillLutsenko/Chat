{"version":3,"sources":["AppStyles.js","components/CheckboxBlock.jsx","api.js","components/MessagesList.jsx","helpers.js","components/SendForm.jsx","components/Chat.jsx","components/LoginForm.jsx","App.jsx","index.js"],"names":["LoginPage","styled","div","LoginFormWrapper","form","LoginInput","input","LoginButton","button","ChatBody","MessagesArea","CheckboxWrapper","Online","p","Offline","Checkbox","Messages","MyMessages","OtherMessages","UserName","MessageText","pre","DispatchTime","SendFormWrapper","TextArea","textarea","SendButton","CheckboxBlock","switchStatus","checkboxStatus","type","name","onChange","BASE_URL","MessagesList","id","messages","setMessages","signal","useEffect","fetch","then","res","ok","Error","status","statusText","json","addConnection","map","message","index","username","time","Date","getTime","sendTime","toLocaleTimeString","sendHelper","userName","messageValue","setMessageValue","method","redirect","response","text","result","catch","error","console","warn","addMessage","SendForm","useState","placeholder","cols","rows","value","e","target","onKeyPress","shiftKey","key","trim","preventDefault","handleKeyPressForSend","wrap","disabled","onClick","Chat","setCheckboxStatus","messagesRef","useRef","controller","AbortController","current","scrollTo","abort","ref","LoginForm","setUserName","nameValue","setNameValue","checkIn","to","App","refId","uniqueNumber","Math","round","random","toString","getUniqueID","path","Global","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b650d176.chunk.js","sourcesContent":["import styled from 'styled-components';\n\n//App styled components\n\nexport const LoginPage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`;\n\n//LoginForm styled components\n\nexport const LoginFormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const LoginInput = styled.input`\n  padding: 5px;\n  width: 120px;\n  height: 30px;\n  font-size: 12px;\n  outline: none;\n  border: 1px solid #39dbaa;\n  border-radius: 5px;\n`;\n\nexport const LoginButton = styled.button`\n  margin-top: 5px;\n  padding: 2px 10px;\n  width: 120px;\n  height: 30px;\n  border: 1px solid #39dbaa;\n  border-radius: 5px;\n  font-weight: 600;\n  background: #fff;\n  color: #39dbaa;\n  cursor: pointer;\n`;\n\n//Chat styled components\n\nexport const ChatBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MessagesArea = styled.div`\n  margin-top: 20px;\n  width: 400px;\n  height: 300px;\n  background: rgb(57, 219, 170, 0.4);\n  border-radius: 5px;\n  overflow: auto;\n\n  &::-webkit-scrollbar { width: 5px;}\n  &::-webkit-scrollbar-button {  background-color: #04c98a; border-radius: 5px; }\n  &::-webkit-scrollbar-track-piece { background-color: #c6c6c6;}\n  &::-webkit-scrollbar-thumb { height: 30px; background-color: #04c98a; border-radius: 5px;}\n`;\n\n//CheckboxBlock styled components\n\nexport const CheckboxWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n  width: 400px;\n`;\n\nexport const Online = styled.p`\n  color: #04c98a;\n`;\n\nexport const Offline = styled(Online)`\n  color: #c6c6c6;\n`;\n\nexport const Checkbox = styled.input`\n  position: relative;\n  width: 40px;\n  height: 20px;\n  appearance: none;\n  background: rgb(57, 219, 170, 0.4);\n  outline: none;\n  border-radius: 20px;\n  box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2);\n  cursor: pointer;\n  transition: background 0.3s ease;\n\n  &:checked {\n    background: #c6c6c6;\n  }\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: 20px;\n    height: 20px;\n    border-radius: 20px;\n    background: #04c98a;\n    transform: scale(1.05);\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.4);\n    transition: 0.3s;\n  }\n\n  &:checked:before {\n    right: 20px;\n  }\n`;\n\n//MessagesList styled components\n\nexport const Messages = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 15px;\n`;\n\nexport const MyMessages = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const OtherMessages = styled(MyMessages)`\n  align-items: flex-end;\n`;\n\nexport const UserName = styled.p`\n  font-size: 12px;\n  font-weight: 400;\n  color: rgb(61, 55, 55, 0.6)\n`;\n\nexport const MessageText = styled.pre`\n  padding: 5px 15px;\n  margin-bottom: 2px;\n  font-style: italic;\n  border-radius: 5px;\n  background: #fff;\n  word-break: break-all;\n  color: rgb(61, 55, 55)\n`;\n\n\nexport const DispatchTime = styled.div`\n  display: flex;\n  align-items: flex-end;\n  margin-bottom: 5px;\n  font-size: 9px;\n  color: rgb(61, 55, 55, 0.6)\n`;\n\n//SendForm styled components\n\nexport const SendFormWrapper = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  margin-top: 5px;\n`;\n\nexport const TextArea = styled.textarea`\n  padding: 5px;\n  width: 400px;\n  border: 1px solid #39dbaa;\n  border-radius: 5px;\n  resize: none;\n\n  &:focus {\n    outline: none;\n  }\n\n  &:disabled {\n    border-color: #c6c6c6;\n  }\n`;\n\nexport const SendButton = styled.button`\n  margin-top: 5px;\n  padding: 5px 15px;\n  border-radius: 5px;\n  border: 2px solid #39dbaa;\n  background: #fff;\n  font-weight: 600;\n  cursor: pointer;\n  color: #39dbaa;\n  transition: color 0.2s ease, background 0.3s ease;\n\n  &:hover {\n    background: #39dbaa;\n    color: #fff;\n  }\n\n  &:disabled {\n    color: #c6c6c6;\n    border-color: #c6c6c6;\n  }\n`;\n\n","import React from 'react';\nimport { CheckboxWrapper, Checkbox, Online, Offline, } from '../AppStyles'\n\nexport const CheckboxBlock = ({ switchStatus, checkboxStatus }) => {\n  return (\n    <CheckboxWrapper>\n      <Checkbox\n        type=\"checkbox\"\n        name=\"switcher\"\n        onChange={switchStatus}\n      />\n      {\n        checkboxStatus\n          ? <Online>Online</Online> \n          : <Offline>Offline</Offline>\n      }\n    </CheckboxWrapper>\n  )\n}\n","export const BASE_URL = 'http://localhost:5000';\n\nexport const addConnection = (signal) => {\n  return fetch(`${BASE_URL}/connect`, { signal })\n  .then(res => {\n    if (!res.ok) {\n      throw new Error(`${res.status} - ${res.statusText}`);\n    }\n\n    return res.json();\n  })\n  .then(res => res)\n}\n\nexport const addMessage = (userName, messageValue, time, id) => {\n  const requestOptions = {\n    method: 'GET',\n    redirect: 'follow'\n  };\n\n  fetch(`${BASE_URL}/message?username=${userName}&message=${messageValue}&time=${time}&id=${id}`, requestOptions)\n  .then(response => response.text())\n  .then(result => result)\n  .catch(error => {\n    console.warn('Error:', error);\n  });\n}\n","import React, { useEffect } from 'react';\nimport { addConnection } from '../api';\nimport {\n  Messages,\n  MyMessages,\n  MessageText,\n  DispatchTime,\n  OtherMessages,\n  UserName\n} from '../AppStyles';\n\nexport const MessagesList = ({ id, messages, setMessages, checkboxStatus, signal }) => {\n  useEffect(() => {\n    if (checkboxStatus) {\n      addConnection(signal)\n        .then(res => setMessages([...messages, res]));\n    }\n  }, [messages, setMessages, checkboxStatus, signal])\n\n  return(\n    <Messages>\n      {messages.map((message, index) => (\n        (message.id === id) ? (\n          <MyMessages key={`Key-${index}-${new Date(message.time).getTime()}`}>\n            <UserName>{message.username}</UserName>\n            <MessageText>{message.message}</MessageText>\n            <DispatchTime>{message.time}</DispatchTime>\n          </MyMessages>\n        ) : (\n          <OtherMessages key={`Key-${index}-${new Date(message.time).getTime()}`}>\n            <UserName>{message.username}</UserName>\n            <MessageText>{message.message}</MessageText>\n            <DispatchTime>{message.time}</DispatchTime>\n          </OtherMessages>\n        )\n      ))}\n    </Messages>\n  )\n}","import { addMessage } from './api';\nconst sendTime = new Date().toLocaleTimeString();\n\nexport const sendHelper = (userName, messageValue, id, setMessageValue) => {\n  addMessage(userName, messageValue, sendTime, id);\n  setMessageValue('');\n}\n\nexport const getUniqueID = () => {\n  let uniqueNumber = Math.round(Math.random() * 1000000 + 100000);\n  let time = new Date().getTime();\n\n  return uniqueNumber.toString() + '-' + time.toString();\n}\n","import React, { useState } from 'react';\nimport { SendButton, SendFormWrapper, TextArea } from '../AppStyles';\nimport { sendHelper } from '../helpers';\n\nexport const SendForm = ({ userName, id, checkboxStatus }) => {\n  const [messageValue, setMessageValue] = useState('');\n\n  const handleKeyPressForSend = (e) => {\n    if (!e.shiftKey && e.key === 'Enter' && messageValue.trim()) {\n      e.preventDefault();\n      sendHelper(userName, messageValue, id, setMessageValue);\n    }\n  }\n\n  const sendMessage = () => {\n    if (messageValue) {\n      sendHelper(userName, messageValue, id, setMessageValue);\n    }\n  }\n\n  return (\n    <SendFormWrapper >\n      <TextArea\n        placeholder=\"Enter your message\"\n        id=\"textarea\"\n        cols=\"45\"\n        rows=\"3\"\n        value={messageValue}\n        onChange={e => setMessageValue(e.target.value)}\n        onKeyPress={e => handleKeyPressForSend(e)}\n        wrap=\"soft\"\n        disabled={!checkboxStatus}\n      />\n      <SendButton\n        type=\"button\"\n        onClick={sendMessage}\n        disabled={!checkboxStatus}\n      >\n        Send\n      </SendButton>\n    </SendFormWrapper>\n  )\n}\n","import React, { useState, useRef, useEffect } from 'react';\nimport { ChatBody, MessagesArea } from '../AppStyles';\nimport { CheckboxBlock } from './CheckboxBlock';\nimport { MessagesList } from './MessagesList';\nimport { SendForm } from './SendForm'\n\nexport const Chat = ({ userName, id }) => {\n  const [checkboxStatus, setCheckboxStatus] = useState(true);\n  const [messages, setMessages] = useState([]);\n  const messagesRef = useRef(null);\n  const controller = new AbortController();\n  const signal = controller.signal;\n\n\n  useEffect(() => {\n    messagesRef.current.scrollTo(0, 99999);\n  },[messages])\n\n  const switchStatus = () => {\n    setCheckboxStatus(!checkboxStatus);\n    controller.abort();\n  }\n\n  return (\n    <ChatBody>\n      <CheckboxBlock\n        switchStatus={switchStatus}\n        checkboxStatus={checkboxStatus}\n      />\n\n      <MessagesArea ref={messagesRef}>\n        <MessagesList\n          id={id}\n          messages={messages}\n          setMessages={setMessages}\n          checkboxStatus={checkboxStatus}\n          signal={signal}\n        />\n      </MessagesArea>\n\n      <SendForm\n        userName={userName}\n        id={id}\n        checkboxStatus={checkboxStatus}\n      />\n    </ChatBody>\n  )\n}\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { LoginButton, LoginFormWrapper, LoginInput } from '../AppStyles';\n\nexport const LoginForm = ({ setUserName }) => {\n  const [nameValue, setNameValue] = useState('');\n\n  const checkIn = () => {\n    setUserName(nameValue);\n  }\n\n  return (\n    <LoginFormWrapper>\n      <LoginInput\n        type=\"text\"\n        placeholder=\"Enter your name\"\n        value={nameValue}\n        onChange={e => setNameValue(e.target.value)}\n      />\n      {nameValue ? (\n        <Link\n          to={'/my-chat'}\n        >\n          <LoginButton\n            type=\"button\"\n            onClick={checkIn}\n          >\n            Log in\n          </LoginButton>\n        </Link>\n      ) : (\n        <LoginButton\n          type=\"button\"\n          onClick={checkIn}\n        >\n          Log in\n        </LoginButton>\n      )}\n    </LoginFormWrapper>\n  )\n}\n","import React, { useState, useRef } from 'react';\nimport { Chat } from './components/Chat';\nimport { LoginPage } from './AppStyles';\nimport { LoginForm } from './components/LoginForm';\nimport { getUniqueID } from './helpers';\nimport { Redirect, Route, Switch } from 'react-router-dom';\n\nexport default function App() {\n  const [userName, setUserName] = useState('');\n  const refId = useRef(getUniqueID());\n\n\n  return (\n    <Switch>\n      <Route path=\"/my-chat\">\n        <Chat id={refId.current} userName={userName} />\n      </Route>\n\n      <Route path=\"/login\">\n        <LoginPage>\n          <LoginForm setUserName={setUserName} />\n        </LoginPage>\n      </Route>\n\n      <Redirect path=\"/\" to=\"/Login\" />\n    </Switch>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport App from './App';\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n`;\n\nReactDOM.render(\n  <BrowserRouter>\n    <Global />\n    <App />\n    </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}